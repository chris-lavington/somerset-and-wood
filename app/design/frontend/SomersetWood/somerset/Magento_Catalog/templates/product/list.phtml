<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
use Magento\Framework\App\Action\Action;

?>
<?php
// phpcs:disable Magento2.Templates.ThisInTemplate.FoundThis

/**
 * Product list template
 *
 * @var $block \Magento\Catalog\Block\Product\ListProduct
 */
?>
<?php
$_productCollection = $block->getLoadedProductCollection();
$_helper = $this->helper(Magento\Catalog\Helper\Output::class);
$_imageHelper = $this->helper(Magento\Catalog\Helper\Image::class);
$placeholder_image = '/media/logo/default/somersetandwood-placeholder-compressed.png';
?>
<?php if (!$_productCollection->count()) :?>
    <div class="message info empty"><div><?= $block->escapeHtml(__('We can\'t find artwork matching the selection.')) ?></div></div>
<?php else :?>
    <div class="product-toolbar top"><?= $block->getToolbarHtml() ?></div>
    <?= $block->getAdditionalHtml() ?>
    <?php

        $viewMode = 'grid';
        $image = 'category_page_grid';
        $image_x2 = 'category_page_grid_x2';
        $image_x3 = 'category_page_grid_x3';
        $showDescription = false;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
   
    /**
     * Position for actions regarding image size changing in vde if needed
     */
    $pos = $block->getPositioned();
    ?>
    <div class="products wrapper <?= /* @noEscape */ $viewMode ?> products-<?= /* @noEscape */ $viewMode ?>">
        <?php $iterator = 1; ?>
        <ol class="products list items product-items">
            <?php /** @var $_product \Magento\Catalog\Model\Product */ ?>
            <?php foreach ($_productCollection as $_product) :?>       
            <?php
                $productImageURL = $_imageHelper->init($_product, $image)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->getUrl();
                $productImagePath  = $_SERVER['DOCUMENT_ROOT'].'/pub'.str_replace("https://somersetandwood.com", "", $productImageURL);
                $productImageDimensions = getimagesize($productImagePath);
                // $productImageDimensions = getimagesize($productImageURL);
                $productImageWidth = $productImageDimensions[0];
                $productImageHeight = $productImageDimensions[1];
                
                $productImageURL_x2 = $_imageHelper->init($_product, $image_x2)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->getUrl();
                $productImagePath_x2  = $_SERVER['DOCUMENT_ROOT'].'/pub'.str_replace("https://somersetandwood.com", "", $productImageURL_x2);
                $productImageDimensions_x2 = getimagesize($productImagePath_x2);
                // $productImageDimensions_x2 = getimagesize($productImageURL_x2);
                $productImageWidth_x2 = $productImageDimensions_x2[0];
                $productImageHeight_x2 = $productImageDimensions_x2[1];
                
                $productImageURL_x3 = $_imageHelper->init($_product, $image_x3)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->getUrl();
                $productImagePath_x3  = $_SERVER['DOCUMENT_ROOT'].'/pub'.str_replace("https://somersetandwood.com", "", $productImageURL_x3);
                $productImageDimensions_x3 = getimagesize($productImagePath_x3);
                // $productImageDimensions_x3 = getimagesize($productImageURL_x3);
                $productImageWidth_x3 = $productImageDimensions_x3[0];
                $productImageHeight_x3 = $productImageDimensions_x3[1];


                if($productImageWidth > $productImageHeight) {
                    
                    $orientation = 'landscape';
                    $landscapeImage = $productImageURL;
                    $landscapeImage_x2 = $productImageURL_x2;
                    $landscapeImage_x3 = $productImageURL_x3;

                } elseif ($productImageWidth < $productImageHeight) {

                    $orientation = 'portrait';
                    $difference = 249 - $productImageWidth;
                    $difference_x2 = 498 - $productImageWidth_x2;
                    $difference_x3 = 747 - $productImageWidth_x3;

                    $newHeight = $productImageHeight + $difference;
                    $newHeight_x2 = $productImageHeight_x2 + $difference_x2;
                    $newHeight_x3 = $productImageHeight_x3 + $difference_x3;

                    $resizedPortraitImageUrl = $_imageHelper->init($_product, $image_x3)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->resize(249, ($newHeight+10))
                                        ->getUrl();
                    $resizedPortraitImageUrl_x2 = $_imageHelper->init($_product, $image_x3)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->resize(498, ($newHeight_x2+10))
                                        ->getUrl();
                    $resizedPortraitImageUrl_x3 = $_imageHelper->init($_product, $image_x3)
                                        ->constrainOnly(TRUE)
                                        ->keepAspectRatio(TRUE)
                                        ->keepTransparency(TRUE)
                                        ->keepFrame(FALSE)
                                        ->resize(498, ($newHeight_x3+10))
                                        ->getUrl();

                } elseif ($productImageWidth === $productImageHeight) {
                    
                    $orientation = 'square';
                    $squareImage = $productImageURL;
                    $squareImage_x2 = $productImageURL_x2;
                    $squareImage_x3 = $productImageURL_x3;

                } else {
                    $orientation = 'placeholder';
                }
            ?>

            <?php 
                if($iterator++ == 1) {
                    echo '<li class="item product product-item">';
                } else {
                    echo '</li><li class="item product product-item">';
                }
            ?>

                <div class="product-item-image">
                    <a href="<?= /* @escapeNotVerified */ $_product->getProductUrl() ?>" class="product photo product-item-photo" tabindex="-1">
                        <?php if($orientation === 'portrait') { ?>
                            <img data-src="<?= $resizedPortraitImageUrl; ?>" class="lazyload" loading="lazy" width="249"  style="width: 249px;" data-srcset="<?= $resizedPortraitImageUrl; ?> 1x, <?= $resizedPortraitImageUrl_x2; ?> 2x, <?= $resizedPortraitImageUrl_x3; ?> 3x" />
                        <?php } elseif($orientation === 'landscape') { ?>
                            <img data-src="<?= $landscapeImage; ?>" class="lazyload" loading="lazy" width="249" style="width: 249px;"  data-srcset="<?= $landscapeImage; ?> 1x, <?= $landscapeImage_x2; ?> 2x, <?= $landscapeImage_x3; ?> 3x" />
                        <?php } elseif($orientation === 'square') { ?>
                            <img data-src="<?= $squareImage; ?>" class="lazyload" loading="lazy" width="249" style="width: 249px;"  data-srcset="<?= $squareImage; ?> 1x, <?= $squareImage_x2; ?> 2x, <?= $squareImage_x3; ?> 3x" />
                        <?php } ?>
                    </a>
                </div> <!-- closes .product-item-image -->

                <div class="product-item-info" data-container="product-<?= /* @noEscape */ $viewMode ?>">
                    
                    <?php if($_product->isAvailable()) { ?>
                        <div class="product details product-item-details">
                    <?php } else { ?>
                        <div class="product details product-item-details sold">
                    <?php } ?>

                        <?php
                            $_productNameStripped = $block->stripTags($_product->getName(), null, true);
                        ?>
                        <p>
                            <a class="product-item-link"
                               href="<?= $block->escapeUrl($_product->getProductUrl()) ?>">
                                <?= /* @noEscape */ $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
                            </a>
                        </p>
                        
                        <?php
                            if($_product->isAvailable()) {
                                echo $block->getProductPrice($_product);
                            } else {
                                echo '<div class="price-box sold"><span class="circle"></span><span class="text">SOLD</span></div>';
                            }
                        ?>
                        
                    </div>
                </div>
            <?= ($iterator == count($_productCollection)+1) ? '</li>' : '' ?>
                <?php //} ?> <!-- end if ($_product->isSaleable()) -->
            <?php endforeach; ?>
        </ol>
    </div>
    <div class="product-toolbar bottom"><?= $block->getToolbarHtml() ?></div>
<?php endif; ?>
